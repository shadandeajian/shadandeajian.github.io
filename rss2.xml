<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>傻蛋的阿简的博客</title>
    <link>http://shadandeajian.top/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>长沙理工大学_CS专业_大二在读</description>
    <pubDate>Mon, 29 Oct 2018 13:50:14 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>test</title>
      <link>http://shadandeajian.top/2018/10/29/test/</link>
      <guid>http://shadandeajian.top/2018/10/29/test/</guid>
      <pubDate>Mon, 29 Oct 2018 13:48:27 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;1231231231231&lt;/p&gt;

        
      
      </description>
      
      <content:encoded><![CDATA[<p>1231231231231</p>]]></content:encoded>
      
      <comments>http://shadandeajian.top/2018/10/29/test/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hexo + Github 搭建个人博客</title>
      <link>http://shadandeajian.top/2018/10/20/Hexo%20+%20Git%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <guid>http://shadandeajian.top/2018/10/20/Hexo%20+%20Git%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <pubDate>Sat, 20 Oct 2018 10:22:29 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 使用github创建一个仓库为github.io就能变成一个使用域名能够访问的博客站点。然后我们通过Hexo创建文章，发布到github.io仓库，Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。Hexo能够快速生成博客和部署博客，使创建博客更加简单。&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>&nbsp; &nbsp; &nbsp; &nbsp; 使用github创建一个仓库为github.io就能变成一个使用域名能够访问的博客站点。然后我们通过Hexo创建文章，发布到github.io仓库，Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。Hexo能够快速生成博客和部署博客，使创建博客更加简单。</p></blockquote><a id="more"></a><hr><h1 id="安装清单（Windows）"><a href="#安装清单（Windows）" class="headerlink" title="安装清单（Windows）"></a>安装清单（Windows）</h1><table><thead><tr><th style="text-align:center">安装内容</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">Git</td><td style="text-align:center">把本地的网站push到Github中</td></tr><tr><td style="text-align:center">Node.js</td><td style="text-align:center">Hexo基于Node.js开发</td></tr><tr><td style="text-align:center">Hexo</td><td style="text-align:center">生成博客静态页面</td></tr></tbody></table><h1 id="创建Github-io网站"><a href="#创建Github-io网站" class="headerlink" title="创建Github.io网站"></a>创建Github.io网站</h1><ol><li><p>点击<code>New repository</code></p></li><li><p>输入<code>Repository name</code>，必需为<code>username.github.io</code>格式。<code>username</code>替换为用户名</p></li><li><p>点击按钮<code>Create repository</code></p></li><li><p>进入仓库<code>username.github.io</code>,点击<code>setting</code>,找到<code>GitHub Pages</code>模块</p></li><li><p>点击<code>choose a theme</code>选择一个页面主题</p></li><li><p>访问<code>https://username.github.io</code>就可以访问博客网站了</p></li></ol><h1 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h1><ul><li><p>下载安装：<a href="http://sourceforge.net/projects/git-osx-installer/" target="_blank" rel="noopener">http://sourceforge.net/projects/git-osx-installer/</a></p></li><li><p>验证是否安装成功(在CMD中输入)：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git version</span><br></pre></td></tr></table></figure><h1 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h1><ul><li><p>下载安装：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a></p></li><li><p>验证是否安装成功(在cmd中输入):</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><ul><li>在<code>git bash</code>中输入：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h1 id="开始在本地上写博客"><a href="#开始在本地上写博客" class="headerlink" title="开始在本地上写博客"></a>开始在本地上写博客</h1><ol><li>然后创建一个空文件夹, 比如：<code>hexo-blog</code></li><li>进入<code>hexo-blog</code>目录</li><li>执行<code>hexo init</code>初始化博客站点，如果最后一行显示<code>Start blogging with Hexo!</code>，代表创建成功</li><li>执行<code>hexo server</code> 启动博文站点</li><li>访问<code>http://localhost:4000</code>就能打开博文了</li><li><code>Ctrl</code>+<code>C</code>关闭服务器</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ mkdir hexo-blog</span><br><span class="line">➜  ~ cd hexo-blog</span><br><span class="line">➜  hexo-blog hexo init</span><br><span class="line">INFO  Cloning hexo-starter to ~/hexo-blog</span><br><span class="line">Cloning into &apos;/Users/zhengyong/hexo-blog&apos;...</span><br><span class="line">remote: Counting objects: 68, done.</span><br><span class="line">remote: Total 68 (delta 0), reused 0 (delta 0), pack-reused 67</span><br><span class="line">Unpacking objects: 100% (68/68), done.</span><br><span class="line">Submodule &apos;themes/landscape&apos; (https://github.com/hexojs/hexo-theme-landscape.git) registered for path &apos;themes/landscape&apos;</span><br><span class="line">Cloning into &apos;/Users/zhengyong/hexo-blog/themes/landscape&apos;...</span><br><span class="line">remote: Counting objects: 838, done.</span><br><span class="line">remote: Compressing objects: 100% (6/6), done.</span><br><span class="line">remote: Total 838 (delta 1), reused 3 (delta 0), pack-reused 832</span><br><span class="line">Receiving objects: 100% (838/838), 2.55 MiB | 90.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (441/441), done.</span><br><span class="line">Submodule path &apos;themes/landscape&apos;: checked out &apos;73a23c51f8487cfcd7c6deec96ccc7543960d350&apos;</span><br><span class="line">INFO  Install dependencies</span><br><span class="line">npm WARN deprecated titlecase@1.1.2: no longer maintained</span><br><span class="line">npm WARN deprecated postinstall-build@5.0.3: postinstall-build&apos;s behavior is now built into npm! You should migrate off of postinstall-build and use the new `prepare` lifecycle script with npm 5.0.0 or greater.</span><br><span class="line"></span><br><span class="line">&gt; fsevents@1.2.4 install /Users/zhengyong/hexo-blog/node_modules/fsevents</span><br><span class="line">&gt; node install</span><br><span class="line"></span><br><span class="line">[fsevents] Success: &quot;/Users/zhengyong/hexo-blog/node_modules/fsevents/lib/binding/Release/node-v57-darwin-x64/fse.node&quot; already installed</span><br><span class="line">Pass --update-binary to reinstall or --build-from-source to recompile</span><br><span class="line"></span><br><span class="line">&gt; nunjucks@3.1.3 postinstall /Users/zhengyong/hexo-blog/node_modules/nunjucks</span><br><span class="line">&gt; node postinstall-build.js src</span><br><span class="line"></span><br><span class="line">npm notice created a lockfile as package-lock.json. You should commit this file.</span><br><span class="line">added 464 packages in 28.659s</span><br><span class="line">INFO  Start blogging with Hexo!</span><br><span class="line">➜  hexo-blog hexo server</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br><span class="line">^CINFO  Good bye</span><br></pre></td></tr></table></figure><h1 id="Hexo关联Github"><a href="#Hexo关联Github" class="headerlink" title="Hexo关联Github"></a>Hexo关联Github</h1><ol><li>进入<code>hexo-blog</code>根目录</li><li>安装<code>npm install hexo-deployer-git --save</code>，用<code>Hexo</code>发布博文</li><li>打开<code>hexo-blog</code>根目录下的<code>_config.yml</code>，拉倒最下面, 修改<code>deploy</code>方式如下：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com/username/username.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><ol start="4"><li>进入<code>hexo-blog</code>根目录执行如下命令（参考: <a href="https://hexo.io/zh-cn/docs/commands" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/commands</a>)，第一次上传可能会让你输入<code>git</code>的用户名和密码</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>如果成功，就可以打开 <a href="http://shadandeajian.github.io" target="_blank" rel="noopener">http://shadandeajian.github.io</a>,<code>shadandeajian</code>替换成自己用户名</p><h1 id="使用Hexo创建和发布文章"><a href="#使用Hexo创建和发布文章" class="headerlink" title="使用Hexo创建和发布文章"></a>使用Hexo创建和发布文章</h1><ol><li><p>进入<code>hexo-blog</code>根目录</p></li><li><p>创建文章命令：<code>hexo new &quot;文章标题&quot;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blog hexo new &quot;Hexo + Github 搭建个人博客&quot;</span><br></pre></td></tr></table></figure></li><li><p>打开编辑  <code>Hexo + Github 搭建个人博客.md</code>  文件进行<code>Markdown</code>编辑</p></li><li>发布文章：<code>hexo</code> <code>d</code> <code>-g</code> <strong>注意一下，这里要加上-g参数，要不很可能提交上去，但是页面内容不更新</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">➜  blog hexo d -g</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Files loaded in 922 ms</span><br><span class="line">INFO  Generated: index.html</span><br><span class="line">INFO  Generated: archives/2018/09/index.html</span><br><span class="line">INFO  Generated: archives/index.html</span><br><span class="line">INFO  Generated: 2018/09/03/hello-world/index.html</span><br><span class="line">INFO  Generated: archives/2018/index.html</span><br><span class="line">INFO  Generated: 2018/09/03/my-first-hexo-blog/index.html</span><br><span class="line">INFO  Generated: fonts/iconfont.8c627f.woff</span><br><span class="line">INFO  Generated: fonts/iconfont.45d7ee.svg</span><br><span class="line">INFO  Generated: fonts/iconfont.16acc2.ttf</span><br><span class="line">INFO  Generated: fonts/default-skin.b257fa.svg</span><br><span class="line">INFO  Generated: fonts/tooltip.4004ff.svg</span><br><span class="line">INFO  Generated: img/default-skin.png</span><br><span class="line">INFO  Generated: img/scrollbar_arrow.png</span><br><span class="line">INFO  Generated: img/preloader.gif</span><br><span class="line">INFO  Generated: fonts/iconfont.b322fa.eot</span><br><span class="line">INFO  Generated: slider.e37972.js</span><br><span class="line">INFO  Generated: mobile.992cbe.js</span><br><span class="line">INFO  Generated: main.0cf68a.js</span><br><span class="line">INFO  Generated: main.0cf68a.css</span><br><span class="line">INFO  Generated: 2018/10/04/Hexo + Github 搭建个人博客/index.html</span><br><span class="line">INFO  20 files generated in 475 ms</span><br><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">INFO  Copying files from extend dirs...</span><br><span class="line">warning: CRLF will be replaced by LF in fonts/tooltip.4004ff.svg.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">[master d1c205f] Site updated: 2018-09-04 11:11:08</span><br><span class="line"> 6 files changed, 835 insertions(+)</span><br><span class="line"> create mode 100644 2018/10/04/Hexo + Github 搭建个人博客/index.html</span><br><span class="line">To https://github.com/zyongjava/zyongjava.github.io</span><br><span class="line">   3f0aab7..d1c205f  HEAD -&gt; master</span><br><span class="line">Branch &apos;master&apos; set up to track remote branch &apos;master&apos; from &apos;https://github.com/zyongjava/zyongjava.github.io&apos;.</span><br><span class="line">INFO  Deploy done: git</span><br></pre></td></tr></table></figure></li></ol><p><img src="/images/突突突.jpg" alt=""><br>神奇的Hexo就搭建完成了，下篇文章将讲述一些Hexo的奇淫技巧！！！!</p>]]></content:encoded>
      
      <comments>http://shadandeajian.top/2018/10/20/Hexo%20+%20Git%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>POJ 3321 DFS序 + 树状数组 查询子树</title>
      <link>http://shadandeajian.top/2018/10/17/POJ-3321-DFS%E5%BA%8F-%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84-%E6%9F%A5%E8%AF%A2%E5%AD%90%E6%A0%91/</link>
      <guid>http://shadandeajian.top/2018/10/17/POJ-3321-DFS%E5%BA%8F-%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84-%E6%9F%A5%E8%AF%A2%E5%AD%90%E6%A0%91/</guid>
      <pubDate>Wed, 17 Oct 2018 12:16:19 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;题目：传送门&quot;&gt;&lt;a href=&quot;#题目：传送门&quot; class=&quot;headerlink&quot; title=&quot;题目：传送门&quot;&gt;&lt;/a&gt;题目：&lt;a href=&quot;http://poj.org/problem?id=3321&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;传送门&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;题意：&quot;&gt;&lt;a href=&quot;#题意：&quot; class=&quot;headerlink&quot; title=&quot;题意：&quot;&gt;&lt;/a&gt;题意：&lt;/h3&gt;&lt;p&gt;给一个树，查询结点下的子树的苹果总数，并且要求支持增减苹果&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="题目：传送门"><a href="#题目：传送门" class="headerlink" title="题目：传送门"></a>题目：<a href="http://poj.org/problem?id=3321" target="_blank" rel="noopener">传送门</a></h3><h3 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h3><p>给一个树，查询结点下的子树的苹果总数，并且要求支持增减苹果</p><a id="more"></a><h3 id="题解："><a href="#题解：" class="headerlink" title="题解："></a>题解：</h3><p>查询子树，我们首先想到的是DFS序，还要支持修改操作，我们可以用树状数组维护这个DFS序，因为还要查询，所以我在实际程序中使用了欧拉序。</p><h3 id="AC代码："><a href="#AC代码：" class="headerlink" title="AC代码："></a>AC代码：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> debug(x) cout&lt;&lt;#x&lt;&lt;<span class="meta-string">" = "</span>&lt;&lt;x&lt;&lt;endl;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100010</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; g(maxn);</span><br><span class="line"><span class="comment">//vector&lt;int&gt; g[maxn]这么写会TLE 虽让我也不知道为什么</span></span><br><span class="line"><span class="keyword">int</span> step, start_dfs[maxn], end_dfs[maxn], f[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">    start_dfs[u] = step;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator iter = g[u].begin(); iter != g[u].end(); iter++) &#123;</span><br><span class="line">        step++;</span><br><span class="line">        dfs(*iter);</span><br><span class="line">    &#125;</span><br><span class="line">    end_dfs[u] = step;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/********************树状数组模板************************/</span></span><br><span class="line"><span class="keyword">int</span> BITree_max = maxn; <span class="comment">//数据范围[1,BITree],注意最小值是1，如果为0，请++</span></span><br><span class="line"><span class="keyword">int</span> BITree_num[maxn];<span class="comment">//maxn为元素的个数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> value)</span> </span>&#123; <span class="comment">//更新结点i的值为value</span></span><br><span class="line">    <span class="keyword">while</span> (i &lt;= BITree_max) &#123;</span><br><span class="line">        BITree_num[i] += value;</span><br><span class="line">        i += i &amp; -i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Query</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;<span class="comment">//查询[1,n]的综合</span></span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        ans += BITree_num[i];</span><br><span class="line">        i -= i &amp; -i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/********************树状数组模板************************/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m, u, v;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;u, &amp;v);</span><br><span class="line">        g[u].push_back(v);<span class="comment">//建树</span></span><br><span class="line">    &#125;</span><br><span class="line">    step = <span class="number">1</span>;</span><br><span class="line">    dfs(<span class="number">1</span>);<span class="comment">//dfs序</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        Update(start_dfs[i], <span class="number">1</span>);<span class="comment">//树状数组</span></span><br><span class="line">        f[i] = <span class="number">1</span>;<span class="comment">//1代表有苹果</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">    <span class="keyword">char</span> op;<span class="keyword">int</span> key;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">" %c%d"</span>, &amp;op, &amp;key);<span class="comment">//用空格屏蔽换行符，第一次见到</span></span><br><span class="line">        <span class="keyword">if</span> (op == <span class="string">'C'</span>) &#123;</span><br><span class="line">            debug(Query(start_dfs[key]));</span><br><span class="line">            Update(start_dfs[key], ((f[key] ^ <span class="number">1</span>) - f[key]));</span><br><span class="line">            debug(Query(start_dfs[key]));</span><br><span class="line">            debug(((f[key] ^ <span class="number">1</span>) - f[key]));</span><br><span class="line">            f[key] ^= <span class="number">1</span>;<span class="comment">//0代表无苹果</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; Query(end_dfs[key]) - Query(start_dfs[key] - <span class="number">1</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://shadandeajian.top/2018/10/17/POJ-3321-DFS%E5%BA%8F-%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84-%E6%9F%A5%E8%AF%A2%E5%AD%90%E6%A0%91/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
