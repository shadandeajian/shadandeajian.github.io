<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[加密文章]]></title>
    <url>%2F2018%2F10%2F29%2F%E5%8A%A0%E5%AF%86%E6%96%87%E7%AB%A0%2F</url>
    <content type="text"><![CDATA[这是一篇加密文章测试加密内容]]></content>
      <tags>
        <tag>加密文章</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo + Github 搭建个人博客]]></title>
    <url>%2F2018%2F10%2F20%2FHexo%20%2B%20Git%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[简介 &nbsp; &nbsp; &nbsp; &nbsp; 使用github创建一个仓库为github.io就能变成一个使用域名能够访问的博客站点。然后我们通过Hexo创建文章，发布到github.io仓库，Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。Hexo能够快速生成博客和部署博客，使创建博客更加简单。 安装清单（Windows） 安装内容 作用 Git 把本地的网站push到Github中 Node.js Hexo基于Node.js开发 Hexo 生成博客静态页面 创建Github.io网站 点击New repository 输入Repository name，必需为username.github.io格式。username替换为用户名 点击按钮Create repository 进入仓库username.github.io,点击setting,找到GitHub Pages模块 点击choose a theme选择一个页面主题 访问https://username.github.io就可以访问博客网站了 安装Git 下载安装：http://sourceforge.net/projects/git-osx-installer/ 验证是否安装成功(在CMD中输入)： 1git version 安装Node.js 下载安装：https://nodejs.org/en/ 验证是否安装成功(在cmd中输入): 1node -v 安装Hexo 在git bash中输入： 1npm install -g hexo-cli 开始在本地上写博客 然后创建一个空文件夹, 比如：hexo-blog 进入hexo-blog目录 执行hexo init初始化博客站点，如果最后一行显示Start blogging with Hexo!，代表创建成功 执行hexo server 启动博文站点 访问http://localhost:4000就能打开博文了 Ctrl+C关闭服务器 123456789101112131415161718192021222324252627282930313233343536➜ ~ mkdir hexo-blog➜ ~ cd hexo-blog➜ hexo-blog hexo initINFO Cloning hexo-starter to ~/hexo-blogCloning into &apos;/Users/zhengyong/hexo-blog&apos;...remote: Counting objects: 68, done.remote: Total 68 (delta 0), reused 0 (delta 0), pack-reused 67Unpacking objects: 100% (68/68), done.Submodule &apos;themes/landscape&apos; (https://github.com/hexojs/hexo-theme-landscape.git) registered for path &apos;themes/landscape&apos;Cloning into &apos;/Users/zhengyong/hexo-blog/themes/landscape&apos;...remote: Counting objects: 838, done.remote: Compressing objects: 100% (6/6), done.remote: Total 838 (delta 1), reused 3 (delta 0), pack-reused 832Receiving objects: 100% (838/838), 2.55 MiB | 90.00 KiB/s, done.Resolving deltas: 100% (441/441), done.Submodule path &apos;themes/landscape&apos;: checked out &apos;73a23c51f8487cfcd7c6deec96ccc7543960d350&apos;INFO Install dependenciesnpm WARN deprecated titlecase@1.1.2: no longer maintainednpm WARN deprecated postinstall-build@5.0.3: postinstall-build&apos;s behavior is now built into npm! You should migrate off of postinstall-build and use the new `prepare` lifecycle script with npm 5.0.0 or greater.&gt; fsevents@1.2.4 install /Users/zhengyong/hexo-blog/node_modules/fsevents&gt; node install[fsevents] Success: &quot;/Users/zhengyong/hexo-blog/node_modules/fsevents/lib/binding/Release/node-v57-darwin-x64/fse.node&quot; already installedPass --update-binary to reinstall or --build-from-source to recompile&gt; nunjucks@3.1.3 postinstall /Users/zhengyong/hexo-blog/node_modules/nunjucks&gt; node postinstall-build.js srcnpm notice created a lockfile as package-lock.json. You should commit this file.added 464 packages in 28.659sINFO Start blogging with Hexo!➜ hexo-blog hexo serverINFO Start processingINFO Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.^CINFO Good bye Hexo关联Github 进入hexo-blog根目录 安装npm install hexo-deployer-git --save，用Hexo发布博文 打开hexo-blog根目录下的_config.yml，拉倒最下面, 修改deploy方式如下： 1234deploy: type: git repository: https://github.com/username/username.github.io branch: master 进入hexo-blog根目录执行如下命令（参考: https://hexo.io/zh-cn/docs/commands)，第一次上传可能会让你输入git的用户名和密码 123hexo cleanhexo generatehexo deploy 如果成功，就可以打开 http://shadandeajian.github.io,shadandeajian替换成自己用户名 使用Hexo创建和发布文章 进入hexo-blog根目录 创建文章命令：hexo new &quot;文章标题&quot; 1blog hexo new &quot;Hexo + Github 搭建个人博客&quot; 打开编辑 Hexo + Github 搭建个人博客.md 文件进行Markdown编辑 发布文章：hexo d -g 注意一下，这里要加上-g参数，要不很可能提交上去，但是页面内容不更新12345678910111213141516171819202122232425262728293031323334353637➜ blog hexo d -gINFO Start processingINFO Files loaded in 922 msINFO Generated: index.htmlINFO Generated: archives/2018/09/index.htmlINFO Generated: archives/index.htmlINFO Generated: 2018/09/03/hello-world/index.htmlINFO Generated: archives/2018/index.htmlINFO Generated: 2018/09/03/my-first-hexo-blog/index.htmlINFO Generated: fonts/iconfont.8c627f.woffINFO Generated: fonts/iconfont.45d7ee.svgINFO Generated: fonts/iconfont.16acc2.ttfINFO Generated: fonts/default-skin.b257fa.svgINFO Generated: fonts/tooltip.4004ff.svgINFO Generated: img/default-skin.pngINFO Generated: img/scrollbar_arrow.pngINFO Generated: img/preloader.gifINFO Generated: fonts/iconfont.b322fa.eotINFO Generated: slider.e37972.jsINFO Generated: mobile.992cbe.jsINFO Generated: main.0cf68a.jsINFO Generated: main.0cf68a.cssINFO Generated: 2018/10/04/Hexo + Github 搭建个人博客/index.htmlINFO 20 files generated in 475 msINFO Deploying: gitINFO Clearing .deploy_git folder...INFO Copying files from public folder...INFO Copying files from extend dirs...warning: CRLF will be replaced by LF in fonts/tooltip.4004ff.svg.The file will have its original line endings in your working directory.[master d1c205f] Site updated: 2018-09-04 11:11:08 6 files changed, 835 insertions(+) create mode 100644 2018/10/04/Hexo + Github 搭建个人博客/index.htmlTo https://github.com/zyongjava/zyongjava.github.io 3f0aab7..d1c205f HEAD -&gt; masterBranch &apos;master&apos; set up to track remote branch &apos;master&apos; from &apos;https://github.com/zyongjava/zyongjava.github.io&apos;.INFO Deploy done: git 神奇的Hexo就搭建完成了，下篇文章将讲述一些Hexo的奇淫技巧！！！!]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[POJ 3321 DFS序 + 树状数组 查询子树]]></title>
    <url>%2F2018%2F10%2F17%2FPOJ-3321-DFS%E5%BA%8F-%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84-%E6%9F%A5%E8%AF%A2%E5%AD%90%E6%A0%91%2F</url>
    <content type="text"><![CDATA[题目：传送门题意：给一个树，查询结点下的子树的苹果总数，并且要求支持增减苹果 题解：查询子树，我们首先想到的是DFS序，还要支持修改操作，我们可以用树状数组维护这个DFS序，因为还要查询，所以我在实际程序中使用了欧拉序。 AC代码：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667#include &lt;iostream&gt;#include &lt;vector&gt;#include &lt;cstdio&gt;#define debug(x) cout&lt;&lt;#x&lt;&lt;" = "&lt;&lt;x&lt;&lt;endl;#define INF 0x3f3f3f3fusing namespace std;const int maxn = 100010;vector&lt;vector&lt;int&gt; &gt; g(maxn);//vector&lt;int&gt; g[maxn]这么写会TLE 虽让我也不知道为什么int step, start_dfs[maxn], end_dfs[maxn], f[maxn];void dfs(int u) &#123; start_dfs[u] = step; for (vector&lt;int&gt;::iterator iter = g[u].begin(); iter != g[u].end(); iter++) &#123; step++; dfs(*iter); &#125; end_dfs[u] = step;&#125;/********************树状数组模板************************/int BITree_max = maxn; //数据范围[1,BITree],注意最小值是1，如果为0，请++int BITree_num[maxn];//maxn为元素的个数void Update(int i, int value) &#123; //更新结点i的值为value while (i &lt;= BITree_max) &#123; BITree_num[i] += value; i += i &amp; -i; &#125;&#125;int Query(int i) &#123;//查询[1,n]的综合 int ans = 0; while (i &gt; 0) &#123; ans += BITree_num[i]; i -= i &amp; -i; &#125; return ans;&#125;/********************树状数组模板************************/int main(void) &#123; int n, m, u, v; scanf("%d", &amp;n); for (int i = 1; i &lt; n; i++) &#123; scanf("%d%d", &amp;u, &amp;v); g[u].push_back(v);//建树 &#125; step = 1; dfs(1);//dfs序 for (int i = 1; i &lt;= n; i++) &#123; Update(start_dfs[i], 1);//树状数组 f[i] = 1;//1代表有苹果 &#125; scanf("%d", &amp;m); char op;int key; for (int i = 1; i &lt;= m; i++) &#123; scanf(" %c%d", &amp;op, &amp;key);//用空格屏蔽换行符，第一次见到 if (op == 'C') &#123; debug(Query(start_dfs[key])); Update(start_dfs[key], ((f[key] ^ 1) - f[key])); debug(Query(start_dfs[key])); debug(((f[key] ^ 1) - f[key])); f[key] ^= 1;//0代表无苹果 &#125; else cout &lt;&lt; Query(end_dfs[key]) - Query(start_dfs[key] - 1) &lt;&lt; endl; &#125; return 0;&#125;]]></content>
      <tags>
        <tag>POJ,DFS序,树状数组</tag>
      </tags>
  </entry>
</search>
